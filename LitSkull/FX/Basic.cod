//
// FX Version: fx_5_0
//
// 2 local buffer(s)
//
cbuffer cbPerFrame
{
    DirectionalLight gDirLights[3];     // Offset:    0, size:  192
    float3  gEyePosW;                   // Offset:  192, size:   12
    float   gFogStart;                  // Offset:  204, size:    4
    float   gFogRange;                  // Offset:  208, size:    4
    float4  gFogColor;                  // Offset:  224, size:   16
}

cbuffer cbPerObject
{
    float4x4 gWorld;                    // Offset:    0, size:   64
    float4x4 gWorldInvTranspose;        // Offset:   64, size:   64
    float4x4 gWorldViewProj;            // Offset:  128, size:   64
    float4x4 gTexTransform;             // Offset:  192, size:   64
    Material gMaterial;                 // Offset:  256, size:   64
}

//
// 2 local object(s)
//
Texture2D gDiffuseMap;
SamplerState samAnisotropic
{
    Filter   = uint(ANISOTROPIC /* 85 */);
    MaxAnisotropy = uint(4);
    AddressU = uint(WRAP /* 1 */);
    AddressV = uint(WRAP /* 1 */);
};

//
// 1 groups(s)
//
fxgroup
{
    //
    // 3 technique(s)
    //
    technique11 Light1
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float4 Reflect;                // Offset:  304
                //
                //   } gMaterial;                       // Offset:  256 Size:    64 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // POSITION                 0   xyz         0     NONE   float   xyz 
                // NORMAL                   0   xyz         1     NONE   float   xyz 
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_POSITION              0   xyzw        0      POS   float   xyzw
                // POSITION                 0   xyz         1     NONE   float   xyz 
                // NORMAL                   0   xyz         2     NONE   float   xyz 
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed | skipOptimization
                dcl_constantbuffer cb0[12], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_temps 4
                //
                // Initial variable locations:
                //   v0.x <- vin.PosL.x; v0.y <- vin.PosL.y; v0.z <- vin.PosL.z; 
                //   v1.x <- vin.NormalL.x; v1.y <- vin.NormalL.y; v1.z <- vin.NormalL.z; 
                //   o2.x <- <VS return value>.NormalW.x; o2.y <- <VS return value>.NormalW.y; o2.z <- <VS return value>.NormalW.z; 
                //   o1.x <- <VS return value>.PosW.x; o1.y <- <VS return value>.PosW.y; o1.z <- <VS return value>.PosW.z; 
                //   o0.x <- <VS return value>.PosH.x; o0.y <- <VS return value>.PosH.y; o0.z <- <VS return value>.PosH.z; o0.w <- <VS return value>.PosH.w
                //
                #line 58 "C:\Users\Athos\Documents\Visual Studio 2015\Projects\agp\LitSkull\FX\Basic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // r1.x <- vout.PosW.x
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // r1.y <- vout.PosW.y
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // r1.z <- vout.PosW.z
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // r2.x <- vout.NormalW.x
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // r2.y <- vout.NormalW.y
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // r2.z <- vout.NormalW.z
                
                #line 62
                dp4 r3.x, r0.xyzw, cb0[8].xyzw  // r3.x <- vout.PosH.x
                dp4 r3.y, r0.xyzw, cb0[9].xyzw  // r3.y <- vout.PosH.y
                dp4 r3.z, r0.xyzw, cb0[10].xyzw  // r3.z <- vout.PosH.z
                dp4 r3.w, r0.xyzw, cb0[11].xyzw  // r3.w <- vout.PosH.w
                mov o0.xyzw, r3.xyzw
                mov o1.xyz, r1.xyzx
                mov o2.xyz, r2.xyzx
                ret 
                // Approximately 16 instruction slots used
                            
            };
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[3];                   // Offset:    0 Size:   192
                //   float3 gEyePosW;                   // Offset:  192 Size:    12
                //   float gFogStart;                   // Offset:  204 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  208 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset:  224 Size:    16 [unused]
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float4 Reflect;                // Offset:  304
                //
                //   } gMaterial;                       // Offset:  256 Size:    64
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_POSITION              0   xyzw        0      POS   float       
                // POSITION                 0   xyz         1     NONE   float   xyz 
                // NORMAL                   0   xyz         2     NONE   float   xyz 
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_Target                0   xyzw        0   TARGET   float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed | skipOptimization
                dcl_constantbuffer cb0[13], immediateIndexed
                dcl_constantbuffer cb1[19], immediateIndexed
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_output o0.xyzw
                dcl_temps 14
                //
                // Initial variable locations:
                //   v0.x <- pin.PosH.x; v0.y <- pin.PosH.y; v0.z <- pin.PosH.z; v0.w <- pin.PosH.w; 
                //   v1.x <- pin.PosW.x; v1.y <- pin.PosW.y; v1.z <- pin.PosW.z; 
                //   v2.x <- pin.NormalW.x; v2.y <- pin.NormalW.y; v2.z <- pin.NormalW.z; 
                //   o0.x <- <PS return value>.x; o0.y <- <PS return value>.y; o0.z <- <PS return value>.z; o0.w <- <PS return value>.w
                //
                #line 70 "C:\Users\Athos\Documents\Visual Studio 2015\Projects\agp\LitSkull\FX\Basic.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // r0.x <- pin.NormalW.x; r0.y <- pin.NormalW.y; r0.z <- pin.NormalW.z
                
                #line 73
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[12].xyzx  // r1.x <- toEye.x; r1.y <- toEye.y; r1.z <- toEye.z
                
                #line 76
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // r0.w <- distToEye
                
                #line 79
                div r1.xyz, r1.xyzx, r0.wwww
                
                #line 82
                mov r2.xyz, l(0,0,0,0)  // r2.x <- ambient.x; r2.y <- ambient.y; r2.z <- ambient.z
                mov r3.xyz, l(0,0,0,0)  // r3.x <- diffuse.x; r3.y <- diffuse.y; r3.z <- diffuse.z
                mov r4.xyz, l(0,0,0,0)  // r4.x <- spec.x; r4.y <- spec.y; r4.z <- spec.z
                
                #line 91
                nop 
                mov r5.xyz, cb1[16].xyzx
                mov r6.xyz, cb1[17].xyzx
                mov r7.xyzw, cb1[18].xyzw
                mov r8.xyz, cb0[0].xyzx
                mov r9.xyz, cb0[1].xyzx
                mov r10.xyz, cb0[2].xyzx
                mov r11.xyz, cb0[3].xyzx
                mov r0.xyz, r0.xyzx
                mov r1.xyz, r1.xyzx
                
                #line 95 "C:\Users\Athos\Documents\Visual Studio 2015\Projects\agp\LitSkull\FX\LightHelper.fx"
                mov r12.xyz, l(0,0,0,0)  // r12.x <- diffuse.x; r12.y <- diffuse.y; r12.z <- diffuse.z
                mov r13.xyz, l(0,0,0,0)  // r13.x <- spec.x; r13.y <- spec.y; r13.z <- spec.z
                
                #line 99
                mov r11.xyz, -r11.xyzx  // r11.x <- lightVec.x; r11.y <- lightVec.y; r11.z <- lightVec.z
                
                #line 102
                mul r5.xyz, r5.xyzx, r8.xyzx  // r5.x <- ambient.x; r5.y <- ambient.y; r5.z <- ambient.z
                
                #line 107
                dp3 r0.w, r11.xyzx, r0.xyzx  // r0.w <- diffuseFactor
                nop 
                mov r0.w, r0.w
                
                #line 56
                mov r1.w, l(256)  // r1.w <- MaxStep
                mov r2.w, l(32)  // r2.w <- StepSize
                mov r3.w, l(0.100000)  // r3.w <- Bias
                itof r1.w, r1.w
                mul r0.w, r0.w, r1.w
                add r0.w, r3.w, r0.w
                ftou r0.w, r0.w
                udiv r0.w, null, r0.w, r2.w  // r0.w <- intensityStep
                utof r0.w, r0.w
                mul r0.w, r0.w, l(0.125000)  // r0.w <- <ComputeEffectiveIntensity return value>
                
                #line 109
                mov r0.w, r0.w  // r0.w <- diffuseFactor
                
                #line 113
                lt r1.w, l(0.000000), r0.w
                mov r8.xyz, -r11.xyzx
                dp3 r2.w, r8.xyzx, r0.xyzx
                add r2.w, r2.w, r2.w
                mov r2.w, -r2.w
                mul r0.xyz, r0.xyzx, r2.wwww
                add r0.xyz, r8.xyzx, r0.xyzx  // r0.x <- v.x; r0.y <- v.y; r0.z <- v.z
                dp3 r0.x, r0.xyzx, r1.xyzx
                max r0.x, r0.x, l(0.000000)
                log r0.x, r0.x
                mul r0.x, r0.x, r7.w
                exp r0.x, r0.x  // r0.x <- specFactor
                nop 
                mov r0.x, r0.x
                
                #line 56
                mov r0.y, l(256)  // r0.y <- MaxStep
                mov r0.z, l(32)  // r0.z <- StepSize
                mov r1.x, l(0.100000)  // r1.x <- Bias
                itof r0.y, r0.y
                mul r0.x, r0.y, r0.x
                add r0.x, r1.x, r0.x
                ftou r0.x, r0.x
                udiv r0.x, null, r0.x, r0.z  // r0.x <- intensityStep
                utof r0.x, r0.x
                mul r0.x, r0.x, l(0.125000)  // r0.x <- <ComputeEffectiveIntensity return value>
                
                #line 117
                mov r0.x, r0.x  // r0.x <- specFactor
                mul r0.yzw, r6.xxyz, r0.wwww
                mul r0.yzw, r9.xxyz, r0.yyzw  // r0.y <- diffuse.x; r0.z <- diffuse.y; r0.w <- diffuse.z
                mul r1.xyz, r7.xyzx, r0.xxxx
                mul r1.xyz, r10.xyzx, r1.xyzx  // r1.x <- spec.x; r1.y <- spec.y; r1.z <- spec.z
                movc r0.xyz, r1.wwww, r0.yzwy, r12.xyzx  // r0.x <- diffuse.x; r0.y <- diffuse.y; r0.z <- diffuse.z
                movc r1.xyz, r1.wwww, r1.xyzx, r13.xyzx
                
                #line 91 "C:\Users\Athos\Documents\Visual Studio 2015\Projects\agp\LitSkull\FX\Basic.fx"
                mov r5.xyz, r5.xyzx  // r5.x <- A.x; r5.y <- A.y; r5.z <- A.z
                mov r0.xyz, r0.xyzx  // r0.x <- D.x; r0.y <- D.y; r0.z <- D.z
                mov r1.xyz, r1.xyzx  // r1.x <- S.x; r1.y <- S.y; r1.z <- S.z
                
                #line 94
                add r2.xyz, r2.xyzx, r5.xyzx
                add r0.xyz, r0.xyzx, r3.xyzx  // r0.x <- diffuse.x; r0.y <- diffuse.y; r0.z <- diffuse.z
                add r1.xyz, r1.xyzx, r4.xyzx  // r1.x <- spec.x; r1.y <- spec.y; r1.z <- spec.z
                
                #line 99
                add r0.xyz, r0.xyzx, r2.xyzx
                add r0.xyz, r1.xyzx, r0.xyzx  // r0.x <- litColor.x; r0.y <- litColor.y; r0.z <- litColor.z
                
                #line 102
                mov r0.w, cb1[17].w  // r0.w <- litColor.w
                mov o0.xyz, r0.xyzx
                mov o0.w, r0.w
                ret 
                // Approximately 82 instruction slots used
                            
            };
        }

    }

    technique11 Light2
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float4 Reflect;                // Offset:  304
                //
                //   } gMaterial;                       // Offset:  256 Size:    64 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // POSITION                 0   xyz         0     NONE   float   xyz 
                // NORMAL                   0   xyz         1     NONE   float   xyz 
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_POSITION              0   xyzw        0      POS   float   xyzw
                // POSITION                 0   xyz         1     NONE   float   xyz 
                // NORMAL                   0   xyz         2     NONE   float   xyz 
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed | skipOptimization
                dcl_constantbuffer cb0[12], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_temps 4
                //
                // Initial variable locations:
                //   v0.x <- vin.PosL.x; v0.y <- vin.PosL.y; v0.z <- vin.PosL.z; 
                //   v1.x <- vin.NormalL.x; v1.y <- vin.NormalL.y; v1.z <- vin.NormalL.z; 
                //   o2.x <- <VS return value>.NormalW.x; o2.y <- <VS return value>.NormalW.y; o2.z <- <VS return value>.NormalW.z; 
                //   o1.x <- <VS return value>.PosW.x; o1.y <- <VS return value>.PosW.y; o1.z <- <VS return value>.PosW.z; 
                //   o0.x <- <VS return value>.PosH.x; o0.y <- <VS return value>.PosH.y; o0.z <- <VS return value>.PosH.z; o0.w <- <VS return value>.PosH.w
                //
                #line 58 "C:\Users\Athos\Documents\Visual Studio 2015\Projects\agp\LitSkull\FX\Basic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // r1.x <- vout.PosW.x
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // r1.y <- vout.PosW.y
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // r1.z <- vout.PosW.z
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // r2.x <- vout.NormalW.x
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // r2.y <- vout.NormalW.y
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // r2.z <- vout.NormalW.z
                
                #line 62
                dp4 r3.x, r0.xyzw, cb0[8].xyzw  // r3.x <- vout.PosH.x
                dp4 r3.y, r0.xyzw, cb0[9].xyzw  // r3.y <- vout.PosH.y
                dp4 r3.z, r0.xyzw, cb0[10].xyzw  // r3.z <- vout.PosH.z
                dp4 r3.w, r0.xyzw, cb0[11].xyzw  // r3.w <- vout.PosH.w
                mov o0.xyzw, r3.xyzw
                mov o1.xyz, r1.xyzx
                mov o2.xyz, r2.xyzx
                ret 
                // Approximately 16 instruction slots used
                            
            };
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[3];                   // Offset:    0 Size:   192
                //   float3 gEyePosW;                   // Offset:  192 Size:    12
                //   float gFogStart;                   // Offset:  204 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  208 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset:  224 Size:    16 [unused]
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float4 Reflect;                // Offset:  304
                //
                //   } gMaterial;                       // Offset:  256 Size:    64
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_POSITION              0   xyzw        0      POS   float       
                // POSITION                 0   xyz         1     NONE   float   xyz 
                // NORMAL                   0   xyz         2     NONE   float   xyz 
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_Target                0   xyzw        0   TARGET   float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed | skipOptimization
                dcl_constantbuffer cb0[13], immediateIndexed
                dcl_constantbuffer cb1[19], immediateIndexed
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_output o0.xyzw
                dcl_temps 14
                //
                // Initial variable locations:
                //   v0.x <- pin.PosH.x; v0.y <- pin.PosH.y; v0.z <- pin.PosH.z; v0.w <- pin.PosH.w; 
                //   v1.x <- pin.PosW.x; v1.y <- pin.PosW.y; v1.z <- pin.PosW.z; 
                //   v2.x <- pin.NormalW.x; v2.y <- pin.NormalW.y; v2.z <- pin.NormalW.z; 
                //   o0.x <- <PS return value>.x; o0.y <- <PS return value>.y; o0.z <- <PS return value>.z; o0.w <- <PS return value>.w
                //
                #line 70 "C:\Users\Athos\Documents\Visual Studio 2015\Projects\agp\LitSkull\FX\Basic.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // r0.x <- pin.NormalW.x; r0.y <- pin.NormalW.y; r0.z <- pin.NormalW.z
                
                #line 73
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[12].xyzx  // r1.x <- toEye.x; r1.y <- toEye.y; r1.z <- toEye.z
                
                #line 76
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // r0.w <- distToEye
                
                #line 79
                div r1.xyz, r1.xyzx, r0.wwww
                
                #line 82
                mov r2.xyz, l(0,0,0,0)  // r2.x <- ambient.x; r2.y <- ambient.y; r2.z <- ambient.z
                mov r3.xyz, l(0,0,0,0)  // r3.x <- diffuse.x; r3.y <- diffuse.y; r3.z <- diffuse.z
                mov r4.xyz, l(0,0,0,0)  // r4.x <- spec.x; r4.y <- spec.y; r4.z <- spec.z
                
                #line 91
                nop 
                mov r5.xyz, cb1[16].xyzx
                mov r6.xyz, cb1[17].xyzx
                mov r7.xyzw, cb1[18].xyzw
                mov r8.xyz, cb0[0].xyzx
                mov r9.xyz, cb0[1].xyzx
                mov r10.xyz, cb0[2].xyzx
                mov r11.xyz, cb0[3].xyzx
                mov r0.xyz, r0.xyzx
                mov r1.xyz, r1.xyzx
                
                #line 95 "C:\Users\Athos\Documents\Visual Studio 2015\Projects\agp\LitSkull\FX\LightHelper.fx"
                mov r12.xyz, l(0,0,0,0)  // r12.x <- diffuse.x; r12.y <- diffuse.y; r12.z <- diffuse.z
                mov r13.xyz, l(0,0,0,0)  // r13.x <- spec.x; r13.y <- spec.y; r13.z <- spec.z
                
                #line 99
                mov r11.xyz, -r11.xyzx  // r11.x <- lightVec.x; r11.y <- lightVec.y; r11.z <- lightVec.z
                
                #line 102
                mul r5.xyz, r5.xyzx, r8.xyzx  // r5.x <- ambient.x; r5.y <- ambient.y; r5.z <- ambient.z
                
                #line 107
                dp3 r0.w, r11.xyzx, r0.xyzx  // r0.w <- diffuseFactor
                nop 
                mov r0.w, r0.w
                
                #line 56
                mov r1.w, l(256)  // r1.w <- MaxStep
                mov r2.w, l(32)  // r2.w <- StepSize
                mov r3.w, l(0.100000)  // r3.w <- Bias
                itof r1.w, r1.w
                mul r0.w, r0.w, r1.w
                add r0.w, r3.w, r0.w
                ftou r0.w, r0.w
                udiv r0.w, null, r0.w, r2.w  // r0.w <- intensityStep
                utof r0.w, r0.w
                mul r0.w, r0.w, l(0.125000)  // r0.w <- <ComputeEffectiveIntensity return value>
                
                #line 109
                mov r0.w, r0.w  // r0.w <- diffuseFactor
                
                #line 113
                lt r1.w, l(0.000000), r0.w
                mov r8.xyz, -r11.xyzx
                dp3 r2.w, r8.xyzx, r0.xyzx
                add r2.w, r2.w, r2.w
                mov r2.w, -r2.w
                mul r11.xyz, r0.xyzx, r2.wwww
                add r8.xyz, r8.xyzx, r11.xyzx  // r8.x <- v.x; r8.y <- v.y; r8.z <- v.z
                dp3 r2.w, r8.xyzx, r1.xyzx
                max r2.w, r2.w, l(0.000000)
                log r2.w, r2.w
                mul r2.w, r2.w, r7.w
                exp r2.w, r2.w  // r2.w <- specFactor
                nop 
                mov r2.w, r2.w  // r2.w <- a_Intensity
                
                #line 56
                mov r3.w, l(256)  // r3.w <- MaxStep; r3.w <- MaxStep
                mov r4.w, l(32)  // r4.w <- StepSize; r4.w <- StepSize
                mov r5.w, l(0.100000)  // r5.w <- Bias; r5.w <- Bias
                itof r3.w, r3.w
                mul r2.w, r2.w, r3.w
                add r2.w, r5.w, r2.w
                ftou r2.w, r2.w
                udiv r2.w, null, r2.w, r4.w  // r2.w <- intensityStep; r2.w <- intensityStep
                utof r2.w, r2.w
                mul r2.w, r2.w, l(0.125000)  // r2.w <- <ComputeEffectiveIntensity return value>; r2.w <- <ComputeEffectiveIntensity return value>
                
                #line 117
                mov r2.w, r2.w  // r2.w <- specFactor
                mul r6.xyz, r6.xyzx, r0.wwww
                mul r6.xyz, r9.xyzx, r6.xyzx  // r6.x <- diffuse.x; r6.y <- diffuse.y; r6.z <- diffuse.z
                mul r7.xyz, r7.xyzx, r2.wwww
                mul r7.xyz, r10.xyzx, r7.xyzx  // r7.x <- spec.x; r7.y <- spec.y; r7.z <- spec.z
                movc r6.xyz, r1.wwww, r6.xyzx, r12.xyzx
                movc r7.xyz, r1.wwww, r7.xyzx, r13.xyzx
                
                #line 91 "C:\Users\Athos\Documents\Visual Studio 2015\Projects\agp\LitSkull\FX\Basic.fx"
                mov r5.xyz, r5.xyzx  // r5.x <- A.x; r5.y <- A.y; r5.z <- A.z
                mov r6.xyz, r6.xyzx  // r6.x <- D.x; r6.y <- D.y; r6.z <- D.z
                mov r7.xyz, r7.xyzx  // r7.x <- S.x; r7.y <- S.y; r7.z <- S.z
                
                #line 94
                add r2.xyz, r2.xyzx, r5.xyzx
                add r3.xyz, r3.xyzx, r6.xyzx
                add r4.xyz, r4.xyzx, r7.xyzx
                
                #line 91
                nop 
                mov r5.xyz, cb1[16].xyzx  // r5.x <- mat.Ambient.x; r5.y <- mat.Ambient.y; r5.z <- mat.Ambient.z
                mov r6.xyz, cb1[17].xyzx  // r6.x <- mat.Diffuse.x; r6.y <- mat.Diffuse.y; r6.z <- mat.Diffuse.z
                mov r7.xyzw, cb1[18].xyzw  // r7.x <- mat.Specular.x; r7.y <- mat.Specular.y; r7.z <- mat.Specular.z
                mov r8.xyz, cb0[4].xyzx  // r8.x <- L.Ambient.x; r8.y <- L.Ambient.y; r8.z <- L.Ambient.z
                mov r9.xyz, cb0[5].xyzx
                mov r10.xyz, cb0[6].xyzx
                mov r11.xyz, cb0[7].xyzx  // r11.x <- L.Direction.x; r11.y <- L.Direction.y; r11.z <- L.Direction.z
                
                #line 95 "C:\Users\Athos\Documents\Visual Studio 2015\Projects\agp\LitSkull\FX\LightHelper.fx"
                mov r12.xyz, l(0,0,0,0)  // r12.x <- diffuse.x; r12.y <- diffuse.y; r12.z <- diffuse.z
                mov r13.xyz, l(0,0,0,0)  // r13.x <- spec.x; r13.y <- spec.y; r13.z <- spec.z
                
                #line 99
                mov r11.xyz, -r11.xyzx  // r11.x <- lightVec.x; r11.y <- lightVec.y; r11.z <- lightVec.z
                
                #line 102
                mul r5.xyz, r5.xyzx, r8.xyzx  // r5.x <- ambient.x; r5.y <- ambient.y; r5.z <- ambient.z
                
                #line 107
                dp3 r0.w, r11.xyzx, r0.xyzx
                nop 
                mov r0.w, r0.w  // r0.w <- a_Intensity; r0.w <- a_Intensity
                
                #line 56
                mov r1.w, l(256)  // r1.w <- MaxStep; r1.w <- MaxStep
                mov r2.w, l(32)  // r2.w <- StepSize; r2.w <- StepSize
                mov r3.w, l(0.100000)  // r3.w <- Bias; r3.w <- Bias
                itof r1.w, r1.w
                mul r0.w, r0.w, r1.w
                add r0.w, r3.w, r0.w
                ftou r0.w, r0.w
                udiv r0.w, null, r0.w, r2.w  // r0.w <- intensityStep; r0.w <- intensityStep
                utof r0.w, r0.w
                mul r0.w, r0.w, l(0.125000)  // r0.w <- <ComputeEffectiveIntensity return value>; r0.w <- <ComputeEffectiveIntensity return value>
                
                #line 109
                mov r0.w, r0.w  // r0.w <- diffuseFactor
                
                #line 113
                lt r1.w, l(0.000000), r0.w
                mov r8.xyz, -r11.xyzx
                dp3 r2.w, r8.xyzx, r0.xyzx
                add r2.w, r2.w, r2.w
                mov r2.w, -r2.w
                mul r0.xyz, r0.xyzx, r2.wwww
                add r0.xyz, r8.xyzx, r0.xyzx  // r0.x <- v.x; r0.y <- v.y; r0.z <- v.z
                dp3 r0.x, r0.xyzx, r1.xyzx
                max r0.x, r0.x, l(0.000000)
                log r0.x, r0.x
                mul r0.x, r0.x, r7.w
                exp r0.x, r0.x  // r0.x <- specFactor
                nop 
                mov r0.x, r0.x  // r0.x <- a_Intensity
                
                #line 56
                mov r0.y, l(256)  // r0.y <- MaxStep
                mov r0.z, l(32)  // r0.z <- StepSize
                mov r1.x, l(0.100000)  // r1.x <- Bias
                itof r0.y, r0.y
                mul r0.x, r0.y, r0.x
                add r0.x, r1.x, r0.x
                ftou r0.x, r0.x
                udiv r0.x, null, r0.x, r0.z  // r0.x <- intensityStep
                utof r0.x, r0.x
                mul r0.x, r0.x, l(0.125000)  // r0.x <- <ComputeEffectiveIntensity return value>
                
                #line 117
                mov r0.x, r0.x  // r0.x <- specFactor
                mul r0.yzw, r6.xxyz, r0.wwww
                mul r0.yzw, r9.xxyz, r0.yyzw  // r0.y <- diffuse.x; r0.z <- diffuse.y; r0.w <- diffuse.z
                mul r1.xyz, r7.xyzx, r0.xxxx
                mul r1.xyz, r10.xyzx, r1.xyzx  // r1.x <- spec.x; r1.y <- spec.y; r1.z <- spec.z
                movc r0.xyz, r1.wwww, r0.yzwy, r12.xyzx  // r0.x <- diffuse.x; r0.y <- diffuse.y; r0.z <- diffuse.z
                movc r1.xyz, r1.wwww, r1.xyzx, r13.xyzx
                
                #line 91 "C:\Users\Athos\Documents\Visual Studio 2015\Projects\agp\LitSkull\FX\Basic.fx"
                mov r5.xyz, r5.xyzx  // r5.x <- A.x; r5.y <- A.y; r5.z <- A.z
                mov r0.xyz, r0.xyzx  // r0.x <- D.x; r0.y <- D.y; r0.z <- D.z
                mov r1.xyz, r1.xyzx  // r1.x <- S.x; r1.y <- S.y; r1.z <- S.z
                
                #line 94
                add r2.xyz, r2.xyzx, r5.xyzx
                add r0.xyz, r0.xyzx, r3.xyzx  // r0.x <- diffuse.x; r0.y <- diffuse.y; r0.z <- diffuse.z
                add r1.xyz, r1.xyzx, r4.xyzx  // r1.x <- spec.x; r1.y <- spec.y; r1.z <- spec.z
                
                #line 99
                add r0.xyz, r0.xyzx, r2.xyzx
                add r0.xyz, r1.xyzx, r0.xyzx  // r0.x <- litColor.x; r0.y <- litColor.y; r0.z <- litColor.z
                
                #line 102
                mov r0.w, cb1[17].w  // r0.w <- litColor.w
                mov o0.xyz, r0.xyzx
                mov o0.w, r0.w
                ret 
                // Approximately 145 instruction slots used
                            
            };
        }

    }

    technique11 Light3
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float4 Reflect;                // Offset:  304
                //
                //   } gMaterial;                       // Offset:  256 Size:    64 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // POSITION                 0   xyz         0     NONE   float   xyz 
                // NORMAL                   0   xyz         1     NONE   float   xyz 
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_POSITION              0   xyzw        0      POS   float   xyzw
                // POSITION                 0   xyz         1     NONE   float   xyz 
                // NORMAL                   0   xyz         2     NONE   float   xyz 
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed | skipOptimization
                dcl_constantbuffer cb0[12], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_temps 4
                //
                // Initial variable locations:
                //   v0.x <- vin.PosL.x; v0.y <- vin.PosL.y; v0.z <- vin.PosL.z; 
                //   v1.x <- vin.NormalL.x; v1.y <- vin.NormalL.y; v1.z <- vin.NormalL.z; 
                //   o2.x <- <VS return value>.NormalW.x; o2.y <- <VS return value>.NormalW.y; o2.z <- <VS return value>.NormalW.z; 
                //   o1.x <- <VS return value>.PosW.x; o1.y <- <VS return value>.PosW.y; o1.z <- <VS return value>.PosW.z; 
                //   o0.x <- <VS return value>.PosH.x; o0.y <- <VS return value>.PosH.y; o0.z <- <VS return value>.PosH.z; o0.w <- <VS return value>.PosH.w
                //
                #line 58 "C:\Users\Athos\Documents\Visual Studio 2015\Projects\agp\LitSkull\FX\Basic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // r1.x <- vout.PosW.x
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // r1.y <- vout.PosW.y
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // r1.z <- vout.PosW.z
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // r2.x <- vout.NormalW.x
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // r2.y <- vout.NormalW.y
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // r2.z <- vout.NormalW.z
                
                #line 62
                dp4 r3.x, r0.xyzw, cb0[8].xyzw  // r3.x <- vout.PosH.x
                dp4 r3.y, r0.xyzw, cb0[9].xyzw  // r3.y <- vout.PosH.y
                dp4 r3.z, r0.xyzw, cb0[10].xyzw  // r3.z <- vout.PosH.z
                dp4 r3.w, r0.xyzw, cb0[11].xyzw  // r3.w <- vout.PosH.w
                mov o0.xyzw, r3.xyzw
                mov o1.xyz, r1.xyzx
                mov o2.xyz, r2.xyzx
                ret 
                // Approximately 16 instruction slots used
                            
            };
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[3];                   // Offset:    0 Size:   192
                //   float3 gEyePosW;                   // Offset:  192 Size:    12
                //   float gFogStart;                   // Offset:  204 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  208 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset:  224 Size:    16 [unused]
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float4 Reflect;                // Offset:  304
                //
                //   } gMaterial;                       // Offset:  256 Size:    64
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_POSITION              0   xyzw        0      POS   float       
                // POSITION                 0   xyz         1     NONE   float   xyz 
                // NORMAL                   0   xyz         2     NONE   float   xyz 
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_Target                0   xyzw        0   TARGET   float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed | skipOptimization
                dcl_constantbuffer cb0[13], immediateIndexed
                dcl_constantbuffer cb1[19], immediateIndexed
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_output o0.xyzw
                dcl_temps 14
                //
                // Initial variable locations:
                //   v0.x <- pin.PosH.x; v0.y <- pin.PosH.y; v0.z <- pin.PosH.z; v0.w <- pin.PosH.w; 
                //   v1.x <- pin.PosW.x; v1.y <- pin.PosW.y; v1.z <- pin.PosW.z; 
                //   v2.x <- pin.NormalW.x; v2.y <- pin.NormalW.y; v2.z <- pin.NormalW.z; 
                //   o0.x <- <PS return value>.x; o0.y <- <PS return value>.y; o0.z <- <PS return value>.z; o0.w <- <PS return value>.w
                //
                #line 70 "C:\Users\Athos\Documents\Visual Studio 2015\Projects\agp\LitSkull\FX\Basic.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // r0.x <- pin.NormalW.x; r0.y <- pin.NormalW.y; r0.z <- pin.NormalW.z
                
                #line 73
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[12].xyzx  // r1.x <- toEye.x; r1.y <- toEye.y; r1.z <- toEye.z
                
                #line 76
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // r0.w <- distToEye
                
                #line 79
                div r1.xyz, r1.xyzx, r0.wwww
                
                #line 82
                mov r2.xyz, l(0,0,0,0)  // r2.x <- ambient.x; r2.y <- ambient.y; r2.z <- ambient.z
                mov r3.xyz, l(0,0,0,0)  // r3.x <- diffuse.x; r3.y <- diffuse.y; r3.z <- diffuse.z
                mov r4.xyz, l(0,0,0,0)  // r4.x <- spec.x; r4.y <- spec.y; r4.z <- spec.z
                
                #line 91
                nop 
                mov r5.xyz, cb1[16].xyzx
                mov r6.xyz, cb1[17].xyzx
                mov r7.xyzw, cb1[18].xyzw
                mov r8.xyz, cb0[0].xyzx
                mov r9.xyz, cb0[1].xyzx
                mov r10.xyz, cb0[2].xyzx
                mov r11.xyz, cb0[3].xyzx
                mov r0.xyz, r0.xyzx
                mov r1.xyz, r1.xyzx
                
                #line 95 "C:\Users\Athos\Documents\Visual Studio 2015\Projects\agp\LitSkull\FX\LightHelper.fx"
                mov r12.xyz, l(0,0,0,0)  // r12.x <- diffuse.x; r12.y <- diffuse.y; r12.z <- diffuse.z
                mov r13.xyz, l(0,0,0,0)  // r13.x <- spec.x; r13.y <- spec.y; r13.z <- spec.z
                
                #line 99
                mov r11.xyz, -r11.xyzx  // r11.x <- lightVec.x; r11.y <- lightVec.y; r11.z <- lightVec.z
                
                #line 102
                mul r5.xyz, r5.xyzx, r8.xyzx  // r5.x <- ambient.x; r5.y <- ambient.y; r5.z <- ambient.z
                
                #line 107
                dp3 r0.w, r11.xyzx, r0.xyzx  // r0.w <- diffuseFactor
                nop 
                mov r0.w, r0.w
                
                #line 56
                mov r1.w, l(256)  // r1.w <- MaxStep
                mov r2.w, l(32)  // r2.w <- StepSize
                mov r3.w, l(0.100000)  // r3.w <- Bias
                itof r1.w, r1.w
                mul r0.w, r0.w, r1.w
                add r0.w, r3.w, r0.w
                ftou r0.w, r0.w
                udiv r0.w, null, r0.w, r2.w  // r0.w <- intensityStep
                utof r0.w, r0.w
                mul r0.w, r0.w, l(0.125000)  // r0.w <- <ComputeEffectiveIntensity return value>
                
                #line 109
                mov r0.w, r0.w  // r0.w <- diffuseFactor
                
                #line 113
                lt r1.w, l(0.000000), r0.w
                mov r8.xyz, -r11.xyzx
                dp3 r2.w, r8.xyzx, r0.xyzx
                add r2.w, r2.w, r2.w
                mov r2.w, -r2.w
                mul r11.xyz, r0.xyzx, r2.wwww
                add r8.xyz, r8.xyzx, r11.xyzx  // r8.x <- v.x; r8.y <- v.y; r8.z <- v.z
                dp3 r2.w, r8.xyzx, r1.xyzx
                max r2.w, r2.w, l(0.000000)
                log r2.w, r2.w
                mul r2.w, r2.w, r7.w
                exp r2.w, r2.w  // r2.w <- specFactor
                nop 
                mov r2.w, r2.w  // r2.w <- a_Intensity
                
                #line 56
                mov r3.w, l(256)  // r3.w <- MaxStep; r3.w <- MaxStep
                mov r4.w, l(32)  // r4.w <- StepSize; r4.w <- StepSize
                mov r5.w, l(0.100000)  // r5.w <- Bias; r5.w <- Bias
                itof r3.w, r3.w
                mul r2.w, r2.w, r3.w
                add r2.w, r5.w, r2.w
                ftou r2.w, r2.w
                udiv r2.w, null, r2.w, r4.w  // r2.w <- intensityStep; r2.w <- intensityStep
                utof r2.w, r2.w
                mul r2.w, r2.w, l(0.125000)  // r2.w <- <ComputeEffectiveIntensity return value>; r2.w <- <ComputeEffectiveIntensity return value>
                
                #line 117
                mov r2.w, r2.w  // r2.w <- specFactor
                mul r6.xyz, r6.xyzx, r0.wwww
                mul r6.xyz, r9.xyzx, r6.xyzx  // r6.x <- diffuse.x; r6.y <- diffuse.y; r6.z <- diffuse.z
                mul r7.xyz, r7.xyzx, r2.wwww
                mul r7.xyz, r10.xyzx, r7.xyzx  // r7.x <- spec.x; r7.y <- spec.y; r7.z <- spec.z
                movc r6.xyz, r1.wwww, r6.xyzx, r12.xyzx
                movc r7.xyz, r1.wwww, r7.xyzx, r13.xyzx
                
                #line 91 "C:\Users\Athos\Documents\Visual Studio 2015\Projects\agp\LitSkull\FX\Basic.fx"
                mov r5.xyz, r5.xyzx  // r5.x <- A.x; r5.y <- A.y; r5.z <- A.z
                mov r6.xyz, r6.xyzx  // r6.x <- D.x; r6.y <- D.y; r6.z <- D.z
                mov r7.xyz, r7.xyzx  // r7.x <- S.x; r7.y <- S.y; r7.z <- S.z
                
                #line 94
                add r2.xyz, r2.xyzx, r5.xyzx
                add r3.xyz, r3.xyzx, r6.xyzx
                add r4.xyz, r4.xyzx, r7.xyzx
                
                #line 91
                nop 
                mov r5.xyz, cb1[16].xyzx  // r5.x <- mat.Ambient.x; r5.y <- mat.Ambient.y; r5.z <- mat.Ambient.z
                mov r6.xyz, cb1[17].xyzx  // r6.x <- mat.Diffuse.x; r6.y <- mat.Diffuse.y; r6.z <- mat.Diffuse.z
                mov r7.xyzw, cb1[18].xyzw  // r7.x <- mat.Specular.x; r7.y <- mat.Specular.y; r7.z <- mat.Specular.z
                mov r8.xyz, cb0[4].xyzx  // r8.x <- L.Ambient.x; r8.y <- L.Ambient.y; r8.z <- L.Ambient.z
                mov r9.xyz, cb0[5].xyzx
                mov r10.xyz, cb0[6].xyzx
                mov r11.xyz, cb0[7].xyzx  // r11.x <- L.Direction.x; r11.y <- L.Direction.y; r11.z <- L.Direction.z
                
                #line 95 "C:\Users\Athos\Documents\Visual Studio 2015\Projects\agp\LitSkull\FX\LightHelper.fx"
                mov r12.xyz, l(0,0,0,0)  // r12.x <- diffuse.x; r12.y <- diffuse.y; r12.z <- diffuse.z
                mov r13.xyz, l(0,0,0,0)  // r13.x <- spec.x; r13.y <- spec.y; r13.z <- spec.z
                
                #line 99
                mov r11.xyz, -r11.xyzx  // r11.x <- lightVec.x; r11.y <- lightVec.y; r11.z <- lightVec.z
                
                #line 102
                mul r5.xyz, r5.xyzx, r8.xyzx  // r5.x <- ambient.x; r5.y <- ambient.y; r5.z <- ambient.z
                
                #line 107
                dp3 r0.w, r11.xyzx, r0.xyzx
                nop 
                mov r0.w, r0.w  // r0.w <- a_Intensity; r0.w <- a_Intensity
                
                #line 56
                mov r1.w, l(256)  // r1.w <- MaxStep; r1.w <- MaxStep
                mov r2.w, l(32)  // r2.w <- StepSize; r2.w <- StepSize
                mov r3.w, l(0.100000)  // r3.w <- Bias; r3.w <- Bias
                itof r1.w, r1.w
                mul r0.w, r0.w, r1.w
                add r0.w, r3.w, r0.w
                ftou r0.w, r0.w
                udiv r0.w, null, r0.w, r2.w  // r0.w <- intensityStep; r0.w <- intensityStep
                utof r0.w, r0.w
                mul r0.w, r0.w, l(0.125000)  // r0.w <- <ComputeEffectiveIntensity return value>; r0.w <- <ComputeEffectiveIntensity return value>
                
                #line 109
                mov r0.w, r0.w  // r0.w <- diffuseFactor
                
                #line 113
                lt r1.w, l(0.000000), r0.w
                mov r8.xyz, -r11.xyzx
                dp3 r2.w, r8.xyzx, r0.xyzx
                add r2.w, r2.w, r2.w
                mov r2.w, -r2.w
                mul r11.xyz, r0.xyzx, r2.wwww
                add r8.xyz, r8.xyzx, r11.xyzx  // r8.x <- v.x; r8.y <- v.y; r8.z <- v.z
                dp3 r2.w, r8.xyzx, r1.xyzx
                max r2.w, r2.w, l(0.000000)
                log r2.w, r2.w
                mul r2.w, r2.w, r7.w
                exp r2.w, r2.w  // r2.w <- specFactor
                nop 
                mov r2.w, r2.w  // r2.w <- a_Intensity; r2.w <- a_Intensity
                
                #line 56
                mov r3.w, l(256)  // r3.w <- MaxStep; r3.w <- MaxStep
                mov r4.w, l(32)  // r4.w <- StepSize; r4.w <- StepSize
                mov r5.w, l(0.100000)  // r5.w <- Bias; r5.w <- Bias
                itof r3.w, r3.w
                mul r2.w, r2.w, r3.w
                add r2.w, r5.w, r2.w
                ftou r2.w, r2.w
                udiv r2.w, null, r2.w, r4.w  // r2.w <- intensityStep; r2.w <- intensityStep
                utof r2.w, r2.w
                mul r2.w, r2.w, l(0.125000)  // r2.w <- <ComputeEffectiveIntensity return value>; r2.w <- <ComputeEffectiveIntensity return value>
                
                #line 117
                mov r2.w, r2.w  // r2.w <- specFactor
                mul r6.xyz, r6.xyzx, r0.wwww
                mul r6.xyz, r9.xyzx, r6.xyzx  // r6.x <- diffuse.x; r6.y <- diffuse.y; r6.z <- diffuse.z
                mul r7.xyz, r7.xyzx, r2.wwww
                mul r7.xyz, r10.xyzx, r7.xyzx  // r7.x <- spec.x; r7.y <- spec.y; r7.z <- spec.z
                movc r6.xyz, r1.wwww, r6.xyzx, r12.xyzx
                movc r7.xyz, r1.wwww, r7.xyzx, r13.xyzx
                
                #line 91 "C:\Users\Athos\Documents\Visual Studio 2015\Projects\agp\LitSkull\FX\Basic.fx"
                mov r5.xyz, r5.xyzx  // r5.x <- A.x; r5.y <- A.y; r5.z <- A.z
                mov r6.xyz, r6.xyzx  // r6.x <- D.x; r6.y <- D.y; r6.z <- D.z
                mov r7.xyz, r7.xyzx  // r7.x <- S.x; r7.y <- S.y; r7.z <- S.z
                
                #line 94
                add r2.xyz, r2.xyzx, r5.xyzx
                add r3.xyz, r3.xyzx, r6.xyzx
                add r4.xyz, r4.xyzx, r7.xyzx
                
                #line 91
                nop 
                mov r5.xyz, cb1[16].xyzx  // r5.x <- mat.Ambient.x; r5.y <- mat.Ambient.y; r5.z <- mat.Ambient.z
                mov r6.xyz, cb1[17].xyzx  // r6.x <- mat.Diffuse.x; r6.y <- mat.Diffuse.y; r6.z <- mat.Diffuse.z
                mov r7.xyzw, cb1[18].xyzw  // r7.x <- mat.Specular.x; r7.y <- mat.Specular.y; r7.z <- mat.Specular.z
                mov r8.xyz, cb0[8].xyzx  // r8.x <- L.Ambient.x; r8.y <- L.Ambient.y; r8.z <- L.Ambient.z
                mov r9.xyz, cb0[9].xyzx
                mov r10.xyz, cb0[10].xyzx
                mov r11.xyz, cb0[11].xyzx  // r11.x <- L.Direction.x; r11.y <- L.Direction.y; r11.z <- L.Direction.z
                
                #line 95 "C:\Users\Athos\Documents\Visual Studio 2015\Projects\agp\LitSkull\FX\LightHelper.fx"
                mov r12.xyz, l(0,0,0,0)  // r12.x <- diffuse.x; r12.y <- diffuse.y; r12.z <- diffuse.z
                mov r13.xyz, l(0,0,0,0)  // r13.x <- spec.x; r13.y <- spec.y; r13.z <- spec.z
                
                #line 99
                mov r11.xyz, -r11.xyzx  // r11.x <- lightVec.x; r11.y <- lightVec.y; r11.z <- lightVec.z
                
                #line 102
                mul r5.xyz, r5.xyzx, r8.xyzx  // r5.x <- ambient.x; r5.y <- ambient.y; r5.z <- ambient.z
                
                #line 107
                dp3 r0.w, r11.xyzx, r0.xyzx
                nop 
                mov r0.w, r0.w  // r0.w <- a_Intensity; r0.w <- a_Intensity
                
                #line 56
                mov r1.w, l(256)  // r1.w <- MaxStep; r1.w <- MaxStep
                mov r2.w, l(32)  // r2.w <- StepSize; r2.w <- StepSize
                mov r3.w, l(0.100000)  // r3.w <- Bias; r3.w <- Bias
                itof r1.w, r1.w
                mul r0.w, r0.w, r1.w
                add r0.w, r3.w, r0.w
                ftou r0.w, r0.w
                udiv r0.w, null, r0.w, r2.w  // r0.w <- intensityStep; r0.w <- intensityStep
                utof r0.w, r0.w
                mul r0.w, r0.w, l(0.125000)  // r0.w <- <ComputeEffectiveIntensity return value>; r0.w <- <ComputeEffectiveIntensity return value>
                
                #line 109
                mov r0.w, r0.w  // r0.w <- diffuseFactor
                
                #line 113
                lt r1.w, l(0.000000), r0.w
                mov r8.xyz, -r11.xyzx
                dp3 r2.w, r8.xyzx, r0.xyzx
                add r2.w, r2.w, r2.w
                mov r2.w, -r2.w
                mul r0.xyz, r0.xyzx, r2.wwww
                add r0.xyz, r8.xyzx, r0.xyzx  // r0.x <- v.x; r0.y <- v.y; r0.z <- v.z
                dp3 r0.x, r0.xyzx, r1.xyzx
                max r0.x, r0.x, l(0.000000)
                log r0.x, r0.x
                mul r0.x, r0.x, r7.w
                exp r0.x, r0.x  // r0.x <- specFactor
                nop 
                mov r0.x, r0.x  // r0.x <- a_Intensity
                
                #line 56
                mov r0.y, l(256)  // r0.y <- MaxStep
                mov r0.z, l(32)  // r0.z <- StepSize
                mov r1.x, l(0.100000)  // r1.x <- Bias
                itof r0.y, r0.y
                mul r0.x, r0.y, r0.x
                add r0.x, r1.x, r0.x
                ftou r0.x, r0.x
                udiv r0.x, null, r0.x, r0.z  // r0.x <- intensityStep
                utof r0.x, r0.x
                mul r0.x, r0.x, l(0.125000)  // r0.x <- <ComputeEffectiveIntensity return value>
                
                #line 117
                mov r0.x, r0.x  // r0.x <- specFactor
                mul r0.yzw, r6.xxyz, r0.wwww
                mul r0.yzw, r9.xxyz, r0.yyzw  // r0.y <- diffuse.x; r0.z <- diffuse.y; r0.w <- diffuse.z
                mul r1.xyz, r7.xyzx, r0.xxxx
                mul r1.xyz, r10.xyzx, r1.xyzx  // r1.x <- spec.x; r1.y <- spec.y; r1.z <- spec.z
                movc r0.xyz, r1.wwww, r0.yzwy, r12.xyzx  // r0.x <- diffuse.x; r0.y <- diffuse.y; r0.z <- diffuse.z
                movc r1.xyz, r1.wwww, r1.xyzx, r13.xyzx
                
                #line 91 "C:\Users\Athos\Documents\Visual Studio 2015\Projects\agp\LitSkull\FX\Basic.fx"
                mov r5.xyz, r5.xyzx  // r5.x <- A.x; r5.y <- A.y; r5.z <- A.z
                mov r0.xyz, r0.xyzx  // r0.x <- D.x; r0.y <- D.y; r0.z <- D.z
                mov r1.xyz, r1.xyzx  // r1.x <- S.x; r1.y <- S.y; r1.z <- S.z
                
                #line 94
                add r2.xyz, r2.xyzx, r5.xyzx
                add r0.xyz, r0.xyzx, r3.xyzx  // r0.x <- diffuse.x; r0.y <- diffuse.y; r0.z <- diffuse.z
                add r1.xyz, r1.xyzx, r4.xyzx  // r1.x <- spec.x; r1.y <- spec.y; r1.z <- spec.z
                
                #line 99
                add r0.xyz, r0.xyzx, r2.xyzx
                add r0.xyz, r1.xyzx, r0.xyzx  // r0.x <- litColor.x; r0.y <- litColor.y; r0.z <- litColor.z
                
                #line 102
                mov r0.w, cb1[17].w  // r0.w <- litColor.w
                mov o0.xyz, r0.xyzx
                mov o0.w, r0.w
                ret 
                // Approximately 208 instruction slots used
                            
            };
        }

    }

}

